<!-- PostPage.razor -->
@using System.Collections.Generic
@using ModelsLibrary.Dto

<div class="container mt-5">
    @if (post != null)
    {
        <div class="row">
            <div class="col-md">
                <div class="d-flex justify-content-end mb-3">
                    <button class="active btn btn-sm btn-outline-secondary" @onclick="()=>ReturnToPosts.InvokeAsync()">Back to Posts</button>
                </div>
                <div class="card mb-4">
                    <div class="card-body">
                        <h2 class="card-title">@post.Title</h2>
                        <p class="card-text">@post.Content</p>
                        <div class="row">
                            <div class="col">
                                <p class="card-text" style="font-style:italic"><small class="text-muted">Posted by: @post.User.Username</small></p>
                            </div>
                            <div class="col">
                                <p class="card-text" style="text-align:right; font-style:italic"><small class="text-muted">Date: @post.Date.ToShortDateString()</small></p>
                            </div>
                        </div>
                    </div>
                </div>

                <h3 class="mb-3">Comments</h3>
                <AuthorizeView>
                    <NewCommentForm AddedComment="RefreshPost"></NewCommentForm>
                </AuthorizeView>
                @if(post.Comments.Count > 0){
                    @foreach (var comment in post.Comments)
                    {
                        <div class="card mb-3">
                            <div class="card-body">
                                <p class="card-text">@comment.Content</p>
                                <div class="row">
                                    <div class="col">
                                        <p class="card-text" style="font-style:italic">
                                            <small class="text-muted">Commented by: @(comment.User?.Username ?? "Unknown User")</small>
                                        </p>
                                     </div>
                                    <div class="col">
                                        <p class="card-text" style="text-align:right; font-style:italic">
                                            <small class="text-muted">Date: @post.Date.ToShortDateString()</small>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="mb-3">
                    <p class="fst-italic">No comments yet...</p>
                    </div>
                }
            </div>
        </div>
    }
    else
    {
        <p>Loading...</p>
    }
</div>

@code {
    [CascadingParameter]
    public HttpClient httpClient { get; set; }

    [CascadingParameter]
    public PostDto post { get; set; }

    [Parameter]
    public EventCallback ReturnToPosts { get; set; }

    private async Task RefreshPost()
    {
        post = await httpClient.GetFromJsonAsync<PostDto>($"https://localhost:44321/Post/api/GetPost={post.Id}");
    }
}
