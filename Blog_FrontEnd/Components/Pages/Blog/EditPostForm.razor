@using ModelsLibrary.CommentDto
@using ModelsLibrary.PostDto
@if (isEdit)
{
    <EditForm Model="@EditetPost" OnValidSubmit="UpdatePost">
        <div class="mb-3">
            <label>Title</label>
            <InputText @bind-Value="EditetPost.Title" class="form-control" />
        </div>
        <div class="mb-3">
            <label>Content</label>
            <InputText @bind-Value="EditetPost.Content" class="form-control" />
        </div>
        <div class="mb-3 d-grid gap-2">
            <button type="submit" class="btn btn-primary">Submit</button>
        </div>
        <div class="mb-3 text-center">
            <span class="text-danger">@ErrorMessage</span>
        </div>
        <DataAnnotationsValidator />
        <ValidationSummary />
    </EditForm>
    <button class="btn btn-warning mb-3" @onclick="CancelForm">Cancel Adding New Post</button>
}
else
{
    <button class="btn btn-primary mb-3" @onclick="(()=>isEdit=!isEdit)">łots</button>
}
@code {
    [CascadingParameter]
    public string ApiLink { get; set; }

    [CascadingParameter]
    public HttpClient httpClient { get; set; }


    [Parameter]
    public bool isEdit { get; set; }
    [Parameter]
    public PostDtoPostResponse EditetPost { get; set; }

    private string? OldContent { get; set; }
    private string?  OldTitle { get; set; }

    private string ErrorMessage { get; set; }

    [Parameter]
    public EventCallback<bool> EditetCom { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        OldContent = EditetPost.Content;
    }

    private async Task UpdatePost()
    {
        {
            if (string.IsNullOrEmpty(EditetPost.Content))
            {
                return;
            }
            PostDtoPutRequest SendData = new PostDtoPutRequest
            {
                Id = EditetPost.Id,
                Content = EditetPost.Content,
                Title = EditetPost.Title,
                Date = DateTime.Now,
                UsernName = EditetPost.User.Username
            };

            var response = await httpClient.PutAsJsonAsync<PostDtoPutRequest>(ApiLink + "Post/Update", SendData);

            if (response.IsSuccessStatusCode)
            {
                await EditetCom.InvokeAsync();
            }
            else
            {
                ErrorMessage = "Error editing Post";
            }
            CancelForm();
        }
    }

    private void CancelForm()
    {
        isEdit = false;
        EditetPost.Content = OldContent;
        EditetCom.InvokeAsync();

    }

}
